function [fitresult, gof, fit_str, lifetime_tau] = KLS_exponentialFit(x, y,plot_flag)
%CREATEFIT(X,Y)
%   Input:
%      X Input : x
%      Y Output: y
%      plot_flag: flag to generate a plot of the fit (1 or 0)
%   
%  Output:
%      fitresult : a fit object representing the fit.
%      gof : structure with goodness-of fit info.
%
%  See also FIT, CFIT, SFIT.

%  Auto-generated by MATLAB on 18-Sep-2023 14:59:01

if nargin < 3
    plot_flag = 0;
else
    if plot_flag == 1
        % do nothing
    else
        plot_flag = 0;
    end
end

%% Fit: 'untitled fit 1'.
[xData, yData] = prepareCurveData( x, y );

% Set up fittype and options.
% a*exp(-b*x)+c
ft = fittype( 'a*exp(-b*x)+c', 'independent', 'x', 'dependent', 'y' );
opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
opts.DiffMaxChange = 0.01;
opts.Display = 'Off';
opts.Lower = [0 0 0];
opts.MaxIter = 1000;

IG_A = max(y); % Initial guess for A

y_at_taulifetime = max(y)-(max(y)*log(2));
[~, index] = min(abs(y-y_at_taulifetime)); % find a very rough approximation for time at tau half-life
IG_B = 1/index; % Initial guess for B

IG_C = min(y); % Initial guess for C
opts.StartPoint = [IG_A IG_B IG_C];

opts.Robust = 'Bisquare';

% Fit model to data.
[fitresult, gof] = fit( xData, yData, ft, opts );

% Plot fit with data.
if plot_flag == 1
    h = plot(fitresult, xData, yData);
    h(1).MarkerSize = 5;
    h(1).MarkerFaceColor = '#00FFFF';
    h(1).MarkerEdgeColor = '#008b8b';
    h(1).Marker =  'o';
    h(2).LineStyle  = '--';
    h(2).LineWidth = 2;
    grid off
    box off
    legend off
    %legend(['Data, n = ' num2str(sum_y)],['Fit, Ï„ = ' num2str(lifetime_tau,3) ' min'],'Location','best')
end

fit_str = [num2str(fitresult.a,3) '*exp^{(-' num2str(fitresult.b,3) '*x)} +' num2str(fitresult.c,3)];
lifetime_tau = 1/fitresult.b;
